name: PR

on:
  pull_request:
    branches: [ main ]

permissions:
  id-token: write
  contents: write
  pull-requests: write
  checks: write

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true
          persist-credentials: false

      - name: "NPM Install, Build, and Cache"
        id: npm-install-build-and-cache
        uses: ./.github/actions/npm-install-build-and-cache

  test:
    name: Test
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true
          persist-credentials: false

      - name: "Retrieve Dependencies and Build Artifacts"
        id: retrieve-deps-and-build
        uses: ./.github/actions/retrieve-deps-and-build

      - name: Test
        run: npm run test-all

  type-check:
    name: Type Check
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true
          persist-credentials: false

      - name: "Retrieve Dependencies and Build Artifacts"
        id: retrieve-deps-and-build
        uses: ./.github/actions/retrieve-deps-and-build

      - name: Type Check
        run: npm run type-check-all

  lint:
    name: Lint
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true
          persist-credentials: false

      - name: "Retrieve Dependencies and Build Artifacts"
        id: retrieve-deps-and-build
        uses: ./.github/actions/retrieve-deps-and-build

      - name: Lint
        run: npm run lint-all

  e2e-test:
    name: End-to-end Test
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cache
          key: ${{ runner.os }}

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true
          persist-credentials: false

      - name: "Retrieve Dependencies and Build Artifacts"
        id: retrieve-deps-and-build
        uses: ./.github/actions/retrieve-deps-and-build

      - name: End to End Test
        run: npm run ci:e2e-tests

      - name: Upload End to End Test Images
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: images
          path: e2e-tests/test/__image_snapshots__/

  publish-gh-pages:
    name: Publish GitHub Pages
    needs: [ build ]
    runs-on: ubuntu-latest
    env:
      PR_PATH: pull/${{github.event.number}}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          lfs: true
          persist-credentials: false

      - name: "Retrieve Dependencies and Build Artifacts"
        id: retrieve-deps-and-build
        uses: ./.github/actions/retrieve-deps-and-build

      - name: Set base URL for preview if PR
        run: echo "BASE_URL=https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/${{ env.PR_PATH }}/" >> $GITHUB_ENV

      - name: Deploy to PR preview
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./github-pages-publisher/build
          destination_dir: ${{ env.PR_PATH }}

      - name: Add PR Preview comment
        uses: hasura/comment-progress@v2.2.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
          number: ${{ github.event.number }}
          id: deploy-preview
          message: "A preview of this PR can be seen here:\n\n ✨ ${{ env.BASE_URL }} ✨\n\nChanges may take a few minutes to propagate. The source is here: https://github.com/${{ github.repository }}/tree/gh-pages/${{ env.PR_PATH }}/"

  summary:
    name: Summary
    needs: [build, test, type-check, lint, e2e-test]
    runs-on: ubuntu-latest
    steps:
      - name: Summary
        run: |
          echo "Build: ${{ needs.build.result }}"
          echo "Test: ${{ needs.test.result }}"
          echo "Type Check: ${{ needs.type-check.result }}"
          echo "Lint: ${{ needs.lint.result }}"
          echo "End-to-end Test: ${{ needs.e2e-test.result }}"
