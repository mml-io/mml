name: Main

on:
  push:
    branches: [ main ]

permissions:
  id-token: write
  contents: write
  pull-requests: write
  checks: write

jobs:
  ci:
    name: Common CI Jobs
    uses: ./.github/workflows/ci-common.yaml

  summary:
    name: Summary
    needs: [ci]
    runs-on: ubuntu-latest
    steps:
      - name: Summary
        run: |
          echo "Common CI Jobs: ${{ needs.ci.result }}"

  publish-gh-pages:
    name: Publish GitHub Pages
    needs: [summary]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          lfs: true
          persist-credentials: false

      - name: "Retrieve Dependencies and Build Artifacts"
        id: retrieve-deps-and-build
        uses: ./.github/actions/retrieve-deps-and-build

      - name: Deploy the build to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./github-pages-publisher/build
          destination_dir: main

  publish-experimental-packages:
    name: Publish Experimental Packages
    environment: experimental-package-release
    needs: summary
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true
          persist-credentials: false

      - name: "Retrieve Dependencies and Build Artifacts"
        id: retrieve-deps-and-build
        uses: ./.github/actions/retrieve-deps-and-build

      - name: Publish
        run: |
          # Set up git user for lerna to create a local commit with
          git config --global user.email "lerna-ci@mml.io"
          git config --global user.name "lerna-ci-mml"

          # Set up npm auth token from secret for publishing
          echo //registry.npmjs.org/:_authToken=${NPM_TOKEN} > .npmrc

          # Publish the current commit as an "experimental" version
          version="0.0.0-experimental-$(git rev-parse --short HEAD)-$(date +'%Y%m%d')"
          echo "Publishing experimental version $version"
          ./node_modules/.bin/lerna publish $version --no-private --dist-tag experimental --ignore-scripts --ignore-changes --no-push --exact --yes
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}


  publish-release-packages:
    name: Publish Packages
    environment: package-release
    needs: summary
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true
          persist-credentials: false

      - name: "Retrieve Dependencies and Build Artifacts"
        id: retrieve-deps-and-build
        uses: ./.github/actions/retrieve-deps-and-build

      - name: Publish
        run: |
          # Set up git user for lerna to create a local commit with
          git config --global user.email "lerna-ci@mml.io"
          git config --global user.name "lerna-ci-mml"

          # Set up npm auth token from secret for publishing
          echo //registry.npmjs.org/:_authToken=${NPM_TOKEN} > .npmrc

          # Attempt to publish at the current version - this will skip if the version already exists
          echo "Attempting to publishing latest version"
          ./node_modules/.bin/lerna publish from-package --no-private --dist-tag latest --ignore-scripts --ignore-changes --no-push --yes
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  publish-versioned-viewer-gh-pages:
    name: Publish Versioned Viewer to GitHub Pages
    needs: [publish-release-packages]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true
          persist-credentials: false

      - name: "Retrieve Dependencies and Build Artifacts"
        id: retrieve-deps-and-build
        uses: ./.github/actions/retrieve-deps-and-build

      - name: Determine @mml-viewer version
        id: get-viewer-version
        run: echo "version=$(node -p \"require('./packages/mml-viewer/package.json').version\")" >> $GITHUB_OUTPUT

      - name: Deploy versioned viewer to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./github-pages-publisher/build
          destination_dir: v${{ steps.get-viewer-version.outputs.version }}
